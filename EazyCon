// My Android App using Android studio 
// Goal and operatives for the project ( safety and availability )  
// Used XML for the interface design 
//FirebaseAuth is used to authenticate users.
//FirebaseDatabase is used to store user data and connections.
//When the user clicks "Connect," it checks if the user exists and adds them to a connection list.

// Step 1 Added Firebase Dependencies in build.gradle
gradle
dependencies {
    implementation 'com.google.firebase:firebase-auth:21.0.3'
    implementation 'com.google.firebase:firebase-database:20.0.5'
}

// MainActivity.java for authentication and connecting users
package com.example.connectapp;
import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.auth.FirebaseUser;
import com.google.firebase.database.DataSnapshot;
import com.google.firebase.database.DatabaseError;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.database.ValueEventListener;

public class MainActivity extends AppCompatActivity {
private FirebaseAuth mAuth;
    private DatabaseReference mDatabase;
private EditText etUsername, etEmail;
    private Button btnConnect;
@Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
mAuth = FirebaseAuth.getInstance();
        mDatabase = FirebaseDatabase.getInstance().getReference("users");
etUsername = findViewById(R.id.etUsername);
        etEmail = findViewById(R.id.etEmail);
        btnConnect = findViewById(R.id.btnConnect);
btnConnect.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                String username = etUsername.getText().toString().trim();
                String email = etEmail.getText().toString().trim();
                
                if (!username.isEmpty() && !email.isEmpty()) {
                    connectWithUser(username, email);
                } else {
                    Toast.makeText(MainActivity.this, "Enter both fields", Toast.LENGTH_SHORT).show();
                }
            }
        });
    }
private void connectWithUser(final String username, String email) {
        FirebaseUser currentUser = mAuth.getCurrentUser();
if (currentUser != null) {
            String currentUserId = currentUser.getUid();
// Check if user exists in the database
            mDatabase.child(currentUserId).addListenerForSingleValueEvent(new ValueEventListener() {
                @Override
                public void onDataChange(@NonNull DataSnapshot snapshot) {
                    if (snapshot.exists()) {
                        // Add connection with the entered username
                        DatabaseReference connectionsRef = mDatabase.child(currentUserId).child("connections");
                        connectionsRef.child(username).setValue(email);
                        Toast.makeText(MainActivity.this, "Connected with " + username, Toast.LENGTH_SHORT).show();
                    } else {
                        // Create user profile if not exists
                        mDatabase.child(currentUserId).setValue(new User(username, email));
                        Toast.makeText(MainActivity.this, "User created and connected", Toast.LENGTH_SHORT).show();
                    }
                }
@Override
                public void onCancelled(@NonNull DatabaseError error) {
                    Toast.makeText(MainActivity.this, "Connection failed: " + error.getMessage(), Toast.LENGTH_SHORT).show();
                }
            });
        } else {
            Toast.makeText(MainActivity.this, "User not logged in", Toast.LENGTH_SHORT).show();
        }
    }
// User model class
    public static class User {
        public String username;
        public String email;
public User() {
        }
public User(String username, String email) {
            this.username = username;
            this.email = email;
        }
    }
}

// Activity_main.xml for the UI
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:padding="16dp">
<EditText
        android:id="@+id/etUsername"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:hint="Username" />
<EditText
        android:id="@+id/etEmail"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:hint="Email" />
<Button
        android:id="@+id/btnConnect"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Connect" />
</LinearLayout>

